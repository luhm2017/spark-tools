--变量加工

1、数据加载hive库credit_card_client表
2、数据预处理
    1）、离散型变量 --单变量分析：统计每个类别占比和分布
    select education,count(*) from credit_card_client group by education;
    select marriage,count(*) from credit_card_client group by marriage;
    2）、数字型变量
      age -- 分布分析：均值、分位数、直方图
      --分位数分布
      select
      round(percentile_approx(cast(age as int),0.10),0)   age1,
      round(percentile_approx(cast(age as int),0.20),0)   age2,
      round(percentile_approx(cast(age as int),0.30),0)   age3,
      round(percentile_approx(cast(age as int),0.40),0)   age4,
      round(percentile_approx(cast(age as int),0.50),0)   age5,
      round(percentile_approx(cast(age as int),0.60),0)   age6,
      round(percentile_approx(cast(age as int),0.70),0)   age7,
      round(percentile_approx(cast(age as int),0.80),0)   age8,
      round(percentile_approx(cast(age as int),0.90),0)   age9
      from credit_card_client;
      --分段分布 (频数直方图)
	  select 
      sum(case when age<20 then 1 else 0 end) as age20,
      sum(case when age>=20 and age<25 then 1 else 0 end) as age25,
      sum(case when age>=25 and age<30 then 1 else 0 end) as age30,
      sum(case when age>=30 and age<35 then 1 else 0 end) as age35,
      sum(case when age>=35 and age<40 then 1 else 0 end) as age40,
      sum(case when age>=40 and age<45 then 1 else 0 end) as age45,
      sum(case when age>=45 and age<50 then 1 else 0 end) as age50,
      sum(case when age>=50 and age<55 then 1 else 0 end) as age60,
      sum(case when age>=55 then 1 else 0 end) as other
      from credit_card_client;
      --无监督分箱 最优分箱方法：最小熵、信息值、皮尔森卡方、基尼方差
      --郑明 数据挖掘 特征数据最优分箱
      --同理：字符型变量的最优降低基数
    3）、根据前两项数据观察，有监督分段，并且最优降低基
    4）、异常值根据分位数处理（主要异常金额之类）
    5）、缺失值处理（使用均值、中位数、众数替代）
3、模型开发
    1）、变量选择
      --单因子分析 (每个特征变量分析WOE、IV值)
      --WOE 各分段组别进行 粗分类
      --信息值处理 （高相关性、趋势异常、不易解释、偏离者）
    2）、模型变量选择
      --顺序进入、反向排除法 --理解
4、离散变量处理  credit_card_client_variable20171025
   set hive.exec.reducers.max=200;
   set mapred.reduce.tasks= 200;
   set hive.auto.convert.join=true;
   set hive.mapjoin.smalltable.filesize=5000000;
   set mapreduce.job.queuename=szbigdata;
   select
         round(percentile_approx(cast(limit_bal as int),0.10),0)   limit_bal1,
         round(percentile_approx(cast(limit_bal as int),0.20),0)   limit_bal2,
         round(percentile_approx(cast(limit_bal as int),0.30),0)   limit_bal3,
         round(percentile_approx(cast(limit_bal as int),0.40),0)   limit_bal4,
         round(percentile_approx(cast(limit_bal as int),0.50),0)   limit_bal5,
         round(percentile_approx(cast(limit_bal as int),0.60),0)   limit_bal6,
         round(percentile_approx(cast(limit_bal as int),0.70),0)   limit_bal7,
         round(percentile_approx(cast(limit_bal as int),0.80),0)   limit_bal8,
         round(percentile_approx(cast(limit_bal as int),0.90),0)   limit_bal9
         from credit_card_client_variable20171025;

   select
       sum(case when limit_bal<30000 then 1 else 0 end) as limit_bal1,
       sum(case when limit_bal>=30000 and limit_bal<60000 then 1 else 0 end) as limit_bal2,
       sum(case when limit_bal>=60000 and limit_bal<90000 then 1 else 0 end) as limit_bal3,
       sum(case when limit_bal>=90000 and limit_bal<120000 then 1 else 0 end) as limit_bal4,
       sum(case when limit_bal>=120000 and limit_bal<150000 then 1 else 0 end) as limit_bal5,
       sum(case when limit_bal>=150000 and limit_bal<180000 then 1 else 0 end) as limit_bal6,
       sum(case when limit_bal>=180000 and limit_bal<210000 then 1 else 0 end) as limit_bal7,
       sum(case when limit_bal>=210000 and limit_bal<240000 then 1 else 0 end) as limit_bal8,
       sum(case when limit_bal>=240000 and limit_bal<270000 then 1 else 0 end) as limit_bal9,
       sum(case when limit_bal>=270000 and limit_bal<300000 then 1 else 0 end) as limit_bal10,
       sum(case when limit_bal>=300000 and limit_bal<330000 then 1 else 0 end) as limit_bal11,
       sum(case when limit_bal>=330000 then 1 else 0 end) as other
       from credit_card_client_variable20171025;

   create table credit_card_client_variable20171025_bin as
   select label,limit_bal,
   case when sex = 1 then 1 else 0 end as sex_bin1,
   case when sex = 2 then 1 else 0 end as sex_bin2,
   case when education = 1 then 1 else 0 end as education_bin1,
   case when education = 2 then 1 else 0 end as education_bin2,
   case when education = 3 then 1 else 0 end as education_bin3,
   case when education = 4 then 1 else 0 end as education_bin4,
   case when marriage = 1 then 1 else 0 end as marriage_bin1,
   case when marriage = 2 then 1 else 0 end as marriage_bin2,
   case when marriage = 3 then 1 else 0 end as marriage_bin3,
   case when age <= 21 then 1 else 0 end as age_bin1,
   case when age <= 22 and age > 21 then 1 else 0 end as age_bin2,
   case when age <= 24 and age > 22 then 1 else 0 end as age_bin3,
   case when age <= 25 and age > 24 then 1 else 0 end as age_bin4,
   case when age <= 35 and age > 25 then 1 else 0 end as age_bin5,
   case when age <= 45 and age > 35 then 1 else 0 end as age_bin6,
   case when age <= 59 and age > 45 then 1 else 0 end as age_bin7,
   case when age > 59 then 1 else 0 end as age_bin8,
   bill_amt1,bill_amt2,bill_amt3,bill_amt4,bill_amt5,bill_amt6,
   pay_amt1,pay_amt2,pay_amt3,pay_amt4,pay_amt5,pay_amt6,
   case when pay_0index = 0 then 1 else 0 end as pay_0index_bin1,
   case when pay_0index = 2 then 1 else 0 end as pay_0index_bin2,
   case when pay_0index in (1,3) then 1 else 0 end as pay_0index_bin3,
   case when pay_0index = 4 then 1 else 0 end as pay_0index_bin4,
   case when pay_0index in (5,6) then 1 else 0 end as pay_0index_bin5,
   case when pay_0index in (7,8,9,10) then 1 else 0 end as pay_0index_bin6,
   case when pay_2index = 0 then 1 else 0 end as pay_2index_bin1,
   case when pay_2index = 1 then 1 else 0 end as pay_2index_bin2,
   case when pay_2index = 2 then 1 else 0 end as pay_2index_bin3,
   case when pay_2index = 3 then 1 else 0 end as pay_2index_bin4,
   case when pay_2index in (4,5,7,8,9) then 1 else 0 end as pay_2index_bin5,
   case when pay_2index in (6,10) then 1 else 0 end as pay_2index_bin6,
   case when pay_3index = 0 then 1 else 0 end as pay_3index_bin1,
   case when pay_3index = 1 then 1 else 0 end as pay_3index_bin2,
   case when pay_3index = 2 then 1 else 0 end as pay_3index_bin3,
   case when pay_3index = 3 then 1 else 0 end as pay_3index_bin4,
   case when pay_3index in (4,5,6,7,8,10) then 1 else 0 end as pay_3index_bin5,
   case when pay_3index = 9 then 1 else 0 end as pay_3index_bin6,
   case when pay_4index = 0 then 1 else 0 end as pay_4index_bin1,
   case when pay_4index in (1,2) then 1 else 0 end as pay_4index_bin2,
   case when pay_4index = 3 then 1 else 0 end as pay_4index_bin3,
   case when pay_4index = 4 then 1 else 0 end as pay_4index_bin4,
   case when pay_4index in (5,6) then 1 else 0 end as pay_4index_bin5,
   case when pay_4index = 7 then 1 else 0 end as pay_4index_bin6,
   case when pay_4index in (8,9,10) then 1 else 0 end as pay_4index_bin7,
   case when pay_5index = 0 then 1 else 0 end as pay_5index_bin1,
   case when pay_5index in (1,2) then 1 else 0 end as pay_5index_bin2,
   case when pay_5index = 3 then 1 else 0 end as pay_5index_bin3,
   case when pay_5index = 4 then 1 else 0 end as pay_5index_bin4,
   case when pay_5index = 5 then 1 else 0 end as pay_5index_bin5 ,
   case when pay_5index = 6 then 1 else 0 end as pay_5index_bin6,
   case when pay_5index in (7,8,9) then 1 else 0 end as pay_5index_bin7,
   case when pay_6index = 0 then 1 else 0 end as pay_6index_bin1,
   case when pay_6index in (1,2) then 1 else 0 end as pay_6index_bin2,
   case when pay_6index = 3 then 1 else 0 end as pay_6index_bin3,
   case when pay_6index = 4 then 1 else 0 end as pay_6index_bin4,
   case when pay_6index = 6 then 1 else 0 end as pay_6index_bin5 ,
   case when pay_6index in (5,7,8,9) then 1 else 0 end as pay_6index_bin6
   from credit_card_client_variable20171025 ;