<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>lakala</groupId>
  <artifactId>spark-tools</artifactId>
  <packaging>jar</packaging>
  <version>1.0</version>
  <name>spark-tools</name>


  <properties>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <scala.tools.version>2.10</scala.tools.version>
    <scala.version>2.10.4</scala.version>
    <spark.version>1.6.0</spark.version>
    <hadoop.version>2.6.4</hadoop.version>
    <hbase.version>1.2.1</hbase.version>
    <ml.sparkling.graph>0.0.7</ml.sparkling.graph>
    <neo4j.version>3.1.3</neo4j.version>
    <driver.version>1.3.0</driver.version>
    <neo4j.version>3.1.3</neo4j.version>
    <scope.type>compile</scope.type>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-client</artifactId>
      <version>${hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
      </exclusions>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api-2.5</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-server</artifactId>
        </exclusion>
      </exclusions>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.10</artifactId>
      <version>${spark.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>hadoop-client</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hadoop-core</artifactId>
          <groupId>org.apache.hadoop</groupId>
        </exclusion>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
      </exclusions>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.10</artifactId>
      <version>${spark.version}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <!--spark2.2.0-->
    <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-sql -->
    <!--<dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.10</artifactId>
      <version>2.2.0</version>
      <scope>provided</scope>
    </dependency>-->

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_2.10</artifactId>
      <version>${spark.version}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_2.10</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>14.0.1</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>com.databricks</groupId>
      <artifactId>spark-csv_2.10</artifactId>
      <version>1.5.0</version>
      <scope>${scope.type}</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.4</version>
      <scope>${scope.type}</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.spark/spark-graphx_2.10 -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-graphx_2.10</artifactId>
      <version>1.6.3</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.scalanlp</groupId>
      <artifactId>breeze-viz_2.10</artifactId>
      <version>0.12</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${hadoop.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
      </exclusions>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${hadoop.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>guava</artifactId>
          <groupId>com.google.guava</groupId>
        </exclusion>
      </exclusions>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.37</version>
      <scope>${scope.type}</scope>
    </dependency>
    <!--<dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>14.0.1</version>
      <scope>provided</scope>
    </dependency>-->
    <dependency>
      <groupId>com.github.scopt</groupId>
      <artifactId>scopt_2.10</artifactId>
      <version>3.2.0</version>
      <scope>${scope.type}</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/ml.sparkling/sparkling-graph-api_2.10 -->
    <dependency>
      <groupId>ml.sparkling</groupId>
      <artifactId>sparkling-graph-examples_${scala.tools.version}</artifactId>
      <version>${ml.sparkling.graph}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>ml.sparkling</groupId>
      <artifactId>sparkling-graph-operators_${scala.tools.version}</artifactId>
      <version>${ml.sparkling.graph}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>ml.sparkling</groupId>
      <artifactId>sparkling-graph-loaders_${scala.tools.version}</artifactId>
      <version>${ml.sparkling.graph}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>ml.sparkling</groupId>
      <artifactId>sparkling-graph-api_${scala.tools.version}</artifactId>
      <version>${ml.sparkling.graph}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>ml.sparkling</groupId>
      <artifactId>sparkling-graph-utils_${scala.tools.version}</artifactId>
      <version>${ml.sparkling.graph}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>ml.sparkling</groupId>
      <artifactId>sparkling-graph_${scala.tools.version}</artifactId>
      <version>${ml.sparkling.graph}</version>
      <scope>${scope.type}</scope>
    </dependency>

    <!-- neo4j -->
    <dependency>
      <groupId>org.neo4j.driver</groupId>
      <artifactId>neo4j-java-driver</artifactId>
      <version>${driver.version}</version>
      <scope>${scope.type}</scope>
    </dependency>

    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-jdbc-driver</artifactId>
      <version>3.1.0</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j</artifactId>
      <version>${neo4j.version}</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.neo4j.test</groupId>
      <artifactId>neo4j-harness</artifactId>
      <version>3.1.3</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>com.assembla.scala-incubator</groupId>
      <artifactId>graph-core_2.11</artifactId>
      <version>1.11.0</version>
      <scope>${scope.type}</scope>
    </dependency>
    <!--<dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-rest-graphdb</artifactId>
      <version>2.0.1</version>
      <scope>${scope.type}</scope>
    </dependency>-->

    <!--kafka-->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-kafka_2.10</artifactId>
      <version>${spark.version}</version>
      <scope>${scope.type}</scope>
      <!--<exclusions>
          <exclusion>
              <artifactId>kafka_2.10</artifactId>
              <groupId>org.apache.kafka</groupId>
          </exclusion>
      </exclusions>-->
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.joda/joda-convert -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.9.3</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>org.joda</groupId>
      <artifactId>joda-convert</artifactId>
      <version>1.9.2</version>
      <scope>${scope.type}</scope>
    </dependency>


    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.specs2</groupId>
      <artifactId>specs2_${scala.tools.version}</artifactId>
      <version>1.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.tools.version}</artifactId>
      <version>2.0.M6-SNAP8</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.29</version>
      <scope>${scope.type}</scope>
    </dependency>
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.9.0</version>
      <scope>${scope.type}</scope>
    </dependency>

  </dependencies>

  <!--方法一：使用maven-jar-plugin和maven-dependency-plugin插件打包，缺点是项目本身代码和依赖包分离-->
  <!--<build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        &lt;!&ndash;<configuration>
          &lt;!&ndash;<archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>com.lakala.antifraud.dubbo.main.Startup</mainClass>
            </manifest>
          </archive>&ndash;&gt;
        </configuration>&ndash;&gt;
      </plugin>

      &lt;!&ndash;添加scala打包plugin&ndash;&gt;
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>2.10.4</scalaVersion>
          <sourceDir>src/main/scala</sourceDir>
          <jvmArgs>
            <jvmArg>-Xms64m</jvmArg>
            <jvmArg>-Xmx1024m</jvmArg>
          </jvmArgs>
          &lt;!&ndash;<args>&ndash;&gt;
          &lt;!&ndash;<arg>-target:jvm-1.7</arg>&ndash;&gt;
          &lt;!&ndash;</args>&ndash;&gt;
        </configuration>
      </plugin>
      &lt;!&ndash;打依赖包&ndash;&gt;
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>-->

  <!--方法二：使用maven-assembly-plugin插件打包-->
  <build>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>2.10.4</scalaVersion>
          <sourceDir>src/main/scala</sourceDir>
          <jvmArgs>
            <jvmArg>-Xms64m</jvmArg>
            <jvmArg>-Xmx1024m</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.5.5</version>
        <configuration>
          <!--<archive>
            <manifest>
              <mainClass>com.xxg.Main</mainClass>
            </manifest>
          </archive>-->
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>

        <!--添加此处，会打包全量的依赖包，生成两个包:工程目录包和依赖包-->
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!--方法三：使用maven-shade-plugin插件打包-->
  <!--<build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.3</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-make:transitive</arg>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            &lt;!&ndash;过滤依赖包&ndash;&gt;
            <configuration>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>*.jar</exclude>
                  </excludes>
                  &lt;!&ndash;<includs>
                    <include>**/*.*</include>
                  </includs>&ndash;&gt;
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>-->


  <repositories>
    <repository>
      <id>kafka</id>
      <url>http://repo.hortonworks.com/content/repositories/releases/</url>
    </repository>
    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>
    <repository>
      <id>spark-repo</id>
      <url>http://dl.bintray.com/spark-packages/maven/</url>
    </repository>
  </repositories>

</project>
